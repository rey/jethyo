@function shade($color, $percent)
  @return mix(black, $color, $percent)

=np
  padding: 0

=border-radius($radius)
  border-radius: $radius
  -moz-border-radius: $radius
  -webkit-border-radius: $radius
  background-clip: padding-box

@mixin box-sizing($box-model)
  -webkit-box-sizing: $box-model
  -moz-box-sizing: $box-model
  box-sizing: $box-model

@mixin box-shadow($shadows...)
  -webkit-box-shadow: $shadows
  -moz-box-shadow: $shadows
  box-shadow: $shadows

@mixin text-shadow($horizOffset, $vertOffset, $blur, $color)
  -webkit-text-shadow: $horizOffset $vertOffset $blur $color
  -moz-text-shadow: $horizOffset $vertOffset $blur $color
  -ms-text-shadow: $horizOffset $vertOffset $blur $color
  text-shadow: $horizOffset $vertOffset $blur $color


@mixin opacity($opacity)
  opacity: $opacity
  $opacity-ie: $opacity * 100
  filter: alpha(opacity=$opacity-ie)


=breakpoint($class)
  @if $class == xs
    @media (max-width: 767px)
      @content
  @else if $class == sm
    @media (min-width: 768px)
      @content
  @else if $class == md
    @media (min-width: 992px)
      @content
  @else if $class == lg
    @media (min-width: 1200px)
      @content
  @else
    @warn "Breakpoint mixin supports: xs, sm, md, lg"

// Background Gradient: Top to Bottom
=bg-gradient-t2b($start-colour, $end-colour)
  background-color: $start-colour
  background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour))
  background-image: -webkit-linear-gradient(top, $start-colour, $end-colour)
  background-image: -moz-linear-gradient(top, $start-colour, $end-colour)
  background-image: -ms-linear-gradient(top, $start-colour, $end-colour)
  background-image: -o-linear-gradient(top, $start-colour, $end-colour)
  background-image: linear-gradient(top, $start-colour, $end-colour)
  filter: progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}')


@function str-replace($string, $search, $replace: "")
  $index: str-index($string, $search)

  @if $index
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)
  @return $string


=font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg)
  $src: null

  $extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"))

  $formats: (otf: "opentype", ttf: "truetype")

  @each $ext in $exts
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext)
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext)
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma)

  @font-face
    font-family: quote($name)
    font-style: $style
    font-weight: $weight
    src: $src


=font-smoothing($value: on)
  @if $value == on
    -webkit-font-smoothing: antialiased
    -moz-osx-font-smoothing: grayscale
  @else
    -webkit-font-smoothing: subpixel-antialiased
    -moz-osx-font-smoothing: auto
